package com.example.dawaiilello;import static com.example.dawaiilello.R.*;import static com.example.dawaiilello.RegisterActivity.setSignUpFragment;import static com.example.dawaiilello.fragment.DBqueries.loadCartList;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;import androidx.fragment.app.Fragment;import android.app.Dialog;import android.content.Intent;import android.os.Bundle;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import android.widget.ImageView;import android.widget.TextView;import com.example.dawaiilello.fragment.DBqueries;import com.example.dawaiilello.fragment.HomeFragment;import com.example.dawaiilello.fragment.MyCartFragment;import com.example.dawaiilello.fragment.MyOrdersFragment;import com.example.dawaiilello.fragment.SearchActivity;import com.google.android.gms.tasks.OnCompleteListener;import com.google.android.gms.tasks.Task;import com.google.android.material.bottomnavigation.BottomNavigationView;import com.google.android.material.navigation.NavigationBarView;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.auth.FirebaseUser;import com.google.firebase.firestore.FirebaseFirestore;import com.google.firebase.messaging.FirebaseMessaging;import java.util.HashMap;import java.util.Map;import java.util.Objects;public class MainActivity extends AppCompatActivity {    private BottomNavigationView bottomNavigationView;    private Fragment SelectorFragment;    public static boolean showcart = false;    private TextView badgeCount;    public static  Toolbar toolbar;    private  Dialog signInDialog;    public static String token;     FirebaseUser currentUser;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(layout.activity_main);        toolbar = (Toolbar)findViewById(id.toolbar_main);        setSupportActionBar(toolbar);        bottomNavigationView = findViewById(id.bottom_navigation);        bottomNavigationView.setOnItemSelectedListener(new NavigationBarView.OnItemSelectedListener() {            @Override            public boolean onNavigationItemSelected(@NonNull MenuItem item) {                switch (item.getItemId()){                    case id.nav_home:                        SelectorFragment = new HomeFragment();                        break;                    case id.nav_camera:                        SelectorFragment = null;                        startActivity(new Intent(MainActivity.this, prescriptionActivity.class));                        finish();                        break;                    case id.nav_order:                        SelectorFragment = new MyOrdersFragment();                        break;                    case id.nav_track:                        if (currentUser==null){                            signInDialog.show();                        }else {                            SelectorFragment = new MyCartFragment();                        }                        break;                    case id.nav_profile:                        SelectorFragment = new ProfileFragment();                        break;                } if (SelectorFragment!=null){                    getSupportFragmentManager().beginTransaction().replace(id.fragment_container, SelectorFragment).addToBackStack(null).commit();                }                return true;            }        });        getSupportFragmentManager().beginTransaction().replace(id.fragment_container, new HomeFragment()).commit();        signInDialog = new Dialog(MainActivity.this);        signInDialog.setContentView(layout.signin_dialog);        signInDialog.setCancelable(true);        signInDialog.getWindow().setLayout(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.WRAP_CONTENT);        Button signInBtn = signInDialog.findViewById(id.sign_in_btn);        Button signupBtn = signInDialog.findViewById(id.sign_up_btn);        Intent registerIntent = new Intent(MainActivity.this, RegisterActivity.class);        signInBtn.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                SignInFragment.disableCloseBtn = true;                SignUpFragment.disableCloseBtn = true;                signInDialog.dismiss();                setSignUpFragment = false;                startActivity(registerIntent);            }        });        signupBtn.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                SignInFragment.disableCloseBtn = true;                SignUpFragment.disableCloseBtn = true;                signInDialog.dismiss();                setSignUpFragment = true;                startActivity(registerIntent);            }        });    }    @Override    protected  void onStart(){        super.onStart();        currentUser = FirebaseAuth.getInstance().getCurrentUser();        if(currentUser!=null) {            FirebaseMessaging.getInstance().getToken()                    .addOnCompleteListener(new OnCompleteListener<String>() {                        @Override                        public void onComplete(@NonNull Task<String> task) {                            if (!task.isSuccessful()) {                                return;                            }                            // Get new FCM registration token                            token = task.getResult();                            Map<String, Object> userdata = new HashMap<>();                            userdata.put("token", token);                            FirebaseFirestore.getInstance().collection("Users").document(currentUser.getUid()).collection("USER_DATA").document("MY_Data").update(userdata).addOnCompleteListener(new OnCompleteListener<Void>() {                                @Override                                public void onComplete(@NonNull Task<Void> task) {                                    if (task.isSuccessful()) {                                    }                                }                            });                        }                    });        }        invalidateOptionsMenu();    }    @Override    protected void onResume() {        super.onResume();        invalidateOptionsMenu();    }    @Override    public  boolean onCreateOptionsMenu(Menu menu){        getMenuInflater().inflate(R.menu.main,menu);        MenuItem cartItem = menu.findItem(R.id.main_cart_icon);        cartItem.setActionView(layout.badge_layout);        ImageView badgeIcon = cartItem.getActionView().findViewById(id.badge_icon);        badgeIcon.setImageResource(drawable.ic_cart);        badgeCount = cartItem.getActionView().findViewById(id.badge_count);        if(currentUser !=null){            if (DBqueries.cartList.size() == 0) {                loadCartList(MainActivity.this,new Dialog(MainActivity.this),false, badgeCount,new TextView(MainActivity.this));            }else{                badgeCount.setVisibility(View.VISIBLE);                if (DBqueries.cartList.size()<99) {                    badgeCount.setText(String.valueOf(DBqueries.cartList.size()));                }else{                    badgeCount.setText("99");                }            }        }        cartItem.getActionView().setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                if (currentUser == null){                    signInDialog.show();                }else{                    getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container, new MyCartFragment()).commit();                }            }        });        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item){        int id = item.getItemId();         if(id== R.id.main_search_icon){             Intent searchIntent = new Intent(this, SearchActivity.class);             startActivity(searchIntent);          return true;         }       else if (id==R.id.main_cart_icon){            if (currentUser == null){                signInDialog.show();            }else{                getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container, new MyCartFragment()).commit();            }            return true;        }        return  true;    }    @Override    public void onBackPressed() {        if (getFragmentManager().getBackStackEntryCount()== 1) {            //getFragmentManager().popBackStack();            finish();        } else {            super.onBackPressed();        }    }}